name: Benchmarks

permissions:
  contents: write
  pages: write

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - '**/*.rs'
      - 'Cargo.toml'

concurrency:
  group: benchmarks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  benchmark:
    name: Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache criterion results by branch
        uses: actions/cache@v4
        with:
          path: target/criterion
          key: criterion-${{ github.ref_name }}
          restore-keys: |
            criterion-

      - name: Cache general target directory
        uses: actions/cache@v4
        with:
          path: target/release
          key: target-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            target-release-

      - name: Benchmark
        run: cargo bench --verbose

      - name: Sanitize ref name
        id: get_sanitized_ref_name
        run: |
          SANITIZED_REF_NAME=$(printf "${{ github.ref_name }}" | tr -c '[:alnum:].' '-')
          echo "sanitizedRefName=${SANITIZED_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/criterion
          publish_branch: gh-pages-source
          destination_dir: src/benchmarks/${{ steps.get_sanitized_ref_name.outputs.sanitizedRefName }}

      - name: Trigger gh-pages workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'gh-pages.yml',
              ref: 'gh-pages-script'
            })
